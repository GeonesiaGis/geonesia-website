{"version":3,"sources":["src/about.js","src/app.js","src/brand.js","src/environment.js","src/home.js","src/internationalization.js","src/main.js","src/mapping.js","src/navigation.js","src/references.js","src/technologies.js","src/resources/index.js","D:/prog/web/geonesia-website/src/about.html","D:/prog/web/geonesia-website/src/styles.css","D:/prog/web/geonesia-website/src/app.html","D:/prog/web/geonesia-website/src/brand.html","D:/prog/web/geonesia-website/src/home.html","D:/prog/web/geonesia-website/src/mapping.html","D:/prog/web/geonesia-website/src/navigation.html","D:/prog/web/geonesia-website/src/references.html","D:/prog/web/geonesia-website/src/technologies.html"],"names":["About","internationalization","eventAggregator","subscribe","data","msg","about","attached","reload","App","configureRouter","config","router","title","map","route","moduleId","name","Brand","brand","changeLang","lang","publish","debug","testing","Home","home","Internationalization","httpClient","LangChanged","load","_","fetch","then","response","json","LangLoaded","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","Mapping","mapping","Navigation","navigation","References","references","Technologies","technologies"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class About {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.about);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","export class App {\r\n\r\n    configureRouter(config, router){\r\n        config.title = 'Geonesia';\r\n        config.map([\r\n          { \r\n              route: ['', 'home'],\r\n              moduleId: 'home',\r\n              name: 'home'\r\n          },\r\n          {\r\n              route: 'about',\r\n              moduleId: 'about', \r\n              name: 'about'\r\n          },\r\n          { \r\n              route: 'mapping',   \r\n              moduleId: 'mapping',\r\n              name: 'mapping' },\r\n          {\r\n              route: 'references',  \r\n              moduleId: 'references',\r\n              name: 'references' \r\n          },\r\n          { \r\n              route: 'technologies',  \r\n              moduleId: 'technologies',\r\n              name: 'technologies'\r\n          }\r\n        ]);\r\n\r\n        this.router = router;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded, LangChanged} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Brand {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.brand);\r\n    }\r\n\r\n    changeLang(lang) {\r\n        this.eventAggregator.publish(new LangChanged(lang));\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Home {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.home);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\r\nimport 'whatwg-fetch'; // fetch polyfill\nimport {EventAggregator} from 'aurelia-event-aggregator';\n\r\n@inject (HttpClient, EventAggregator)\r\nexport class Internationalization {\r\n\r\n    constructor(httpClient, eventAggregator) {\r\n        this.httpClient = httpClient;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangChanged, msg => this.load(msg.lang));\r\n        this.eventAggregator.publish(new LangChanged('fr'));\r\n    }\r\n\r\n    load(lang) {\r\n        let _ = this;\r\n        this.httpClient.fetch(`../src/assets/${lang}.json`)\r\n            .then(response => response.json())\r\n            .then(data => _.data = data)\r\n            .then(data => { this.eventAggregator.publish(new LangLoaded(data)) });\r\n    }\r\n\r\n    reload() {\r\n        this.eventAggregator.publish(new LangLoaded(this.data));\r\n    }\r\n\r\n}\r\n\r\nexport class LangChanged {\r\n    constructor(lang) {\r\n        this.lang = lang;\r\n    }\r\n}\r\n\r\nexport class LangLoaded {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport function configure(aurelia) {\n    aurelia.use\n      .standardConfiguration()\n      .feature('resources');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => aurelia.setRoot());\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Mapping {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.mapping);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Navigation {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.navigation);\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class References {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.references);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Technologies {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.technologies);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}