{"version":3,"sources":["src/app.js","src/brand.js","src/environment.js","src/home.js","src/internationalization.js","src/main.js","src/navigation.js","src/skills.js","src/resources/index.js","D:/prog/web/geonesia-website/src/styles.css","D:/prog/web/geonesia-website/src/app.html","D:/prog/web/geonesia-website/src/brand.html","D:/prog/web/geonesia-website/src/home.html","D:/prog/web/geonesia-website/src/navigation.html","D:/prog/web/geonesia-website/src/skills.html"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","Brand","internationalization","eventAggregator","subscribe","data","msg","brand","changeLang","lang","publish","debug","testing","Home","home","attached","reload","Internationalization","httpClient","LangChanged","load","_","fetch","then","response","json","LangLoaded","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","Navigation","navigation","Skills","skills"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n\r\n    configureRouter(config, router){\r\n        config.title = 'Geonesia';\r\n        config.map([\r\n          { route: ['', 'home'], moduleId: 'home',   name: 'home' },\r\n          { route: 'skills',     moduleId: 'skills', name: 'skills' }\r\n        ]);\r\n\r\n        this.router = router;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded, LangChanged} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Brand {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.brand);\r\n    }\r\n\r\n    changeLang(lang) {\r\n        this.eventAggregator.publish(new LangChanged(lang));\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Home {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.home);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\r\nimport 'whatwg-fetch'; // fetch polyfill\nimport {EventAggregator} from 'aurelia-event-aggregator';\n\r\n@inject (HttpClient, EventAggregator)\r\nexport class Internationalization {\r\n\r\n    constructor(httpClient, eventAggregator) {\r\n        this.httpClient = httpClient;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangChanged, msg => this.load(msg.lang));\r\n        this.eventAggregator.publish(new LangChanged('fr'));\r\n    }\r\n\r\n    load(lang) {\r\n        let _ = this;\r\n        this.httpClient.fetch(`../src/assets/${lang}.json`)\r\n            .then(response => response.json())\r\n            .then(data => _.data = data)\r\n            .then(data => { this.eventAggregator.publish(new LangLoaded(data)) });\r\n    }\r\n\r\n    reload() {\r\n        this.eventAggregator.publish(new LangLoaded(this.data));\r\n    }\r\n\r\n}\r\n\r\nexport class LangChanged {\r\n    constructor(lang) {\r\n        this.lang = lang;\r\n    }\r\n}\r\n\r\nexport class LangLoaded {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport function configure(aurelia) {\n    aurelia.use\n      .standardConfiguration()\n      .feature('resources');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => aurelia.setRoot());\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Navigation {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.navigation);\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Internationalization, LangLoaded} from 'internationalization';\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Internationalization, EventAggregator)\r\nexport class Skills {\r\n\r\n    constructor(internationalization, eventAggregator) {\r\n        this.internationalization = internationalization;\r\n        this.eventAggregator = eventAggregator;\r\n        this.eventAggregator.subscribe(LangLoaded, msg => this.data = msg.data.skills);\r\n    }\r\n\r\n    attached() {\r\n        this.internationalization.reload();\r\n    }\r\n\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null],"sourceRoot":"..\\src"}